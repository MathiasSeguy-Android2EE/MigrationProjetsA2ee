dependencies_hash = [
	('libs)COMMENT','//toto'),
	('libs)COMMENT','//tata'),
	('libs)','libs)${libs)}'),
	('org.json:json:COMMENT','    //necessary to read JSONObject in tests'),
	('org.json:json:','org.json:json:${orgJson_json_Version}'),
	('com.squareup.leakcanary:leakcanary-android-no-op:COMMENT','    // LeakCanary declaration order matters https://github.com/square/leakcanary/issues/143'),
	('com.squareup.leakcanary:leakcanary-android-no-op:','com.squareup.leakcanary:leakcanary-android-no-op:${comSquareupLeakcanary_leakcanaryAndroidNoOp_Version}'),
	('com.squareup.leakcanary:leakcanary-android-no-op:COMMENT','    // LeakCanary declaration order matters https://github.com/square/leakcanary/issues/143'),
	('com.squareup.leakcanary:leakcanary-android-no-op:','com.squareup.leakcanary:leakcanary-android-no-op:${comSquareupLeakcanary_leakcanaryAndroidNoOp_Version}'),
	('com.squareup.leakcanary:leakcanary-android:COMMENT','    // LeakCanary declaration order matters https://github.com/square/leakcanary/issues/143'),
	('com.squareup.leakcanary:leakcanary-android:','com.squareup.leakcanary:leakcanary-android:${comSquareupLeakcanary_leakcanaryAndroid_Version}'),
	('com.squareup.leakcanary:leakcanary-android-no-op:COMMENT','    // LeakCanary declaration order matters https://github.com/square/leakcanary/issues/143'),
	('com.squareup.leakcanary:leakcanary-android-no-op:','com.squareup.leakcanary:leakcanary-android-no-op:${comSquareupLeakcanary_leakcanaryAndroidNoOp_Version}'),
	('org.jetbrains.kotlin:kotlin-stdlib-jdk7:COMMENT','    // Kotlin'),
	('org.jetbrains.kotlin:kotlin-stdlib-jdk7:','org.jetbrains.kotlin:kotlin-stdlib-jdk7:${orgJetbrainsKotlin_kotlinStdlibJdk7_Version}'),
	('com.squareup.moshi:moshi:COMMENT','    // Retrofit and co'),
	('com.squareup.moshi:moshi:','com.squareup.moshi:moshi:${comSquareupMoshi_moshi_Version}'),
	('com.squareup.retrofit2:retrofit:COMMENT','    // Retrofit and co'),
	('com.squareup.retrofit2:retrofit:','com.squareup.retrofit2:retrofit:${comSquareupRetrofit2_retrofit_Version}'),
	('com.squareup.retrofit2:converter-moshi:COMMENT','    // Retrofit and co'),
	('com.squareup.retrofit2:converter-moshi:','com.squareup.retrofit2:converter-moshi:${comSquareupRetrofit2_converterMoshi_Version}'),
	('com.squareup.okhttp3:okhttp:COMMENT','    // Retrofit and co'),
	('com.squareup.okhttp3:okhttp:','com.squareup.okhttp3:okhttp:${comSquareupOkhttp3_okhttp_Version}'),
	('com.squareup.okhttp3:logging-interceptor:COMMENT','    // Retrofit and co'),
	('com.squareup.okhttp3:logging-interceptor:','com.squareup.okhttp3:logging-interceptor:${comSquareupOkhttp3_loggingInterceptor_Version}'),
	('com.squareup.okio:okio:COMMENT','    // Retrofit and co'),
	('com.squareup.okio:okio:','com.squareup.okio:okio:${comSquareupOkio_okio_Version}'),
	('org.greenrobot:eventbus:COMMENT','    // EventBus'),
	('org.greenrobot:eventbus:','org.greenrobot:eventbus:${orgGreenrobot_eventbus_Version}'),
	('org.mockito:mockito-core:COMMENT','    // Mockito'),
	('org.mockito:mockito-core:','org.mockito:mockito-core:${orgMockito_mockitoCore_Version}'),
	('com.facebook.network.connectionclass:connectionclass:COMMENT','    // NetWorkConnectionClass (Quality)'),
	('com.facebook.network.connectionclass:connectionclass:','com.facebook.network.connectionclass:connectionclass:${comFacebookNetworkConnectionclass_connectionclass_Version}'),
	('com.f2prateek.dart:dart:COMMENT','    //Dart and Hendson'),
	('com.f2prateek.dart:dart:','com.f2prateek.dart:dart:${comF2prateekDart_dart_Version}'),
	('com.f2prateek.dart:henson:COMMENT','    //Dart and Hendson'),
	('com.f2prateek.dart:henson:','com.f2prateek.dart:henson:${comF2prateekDart_henson_Version}'),
	('com.f2prateek.dart:dart-processor:COMMENT','    //Dart and Hendson'),
	('com.f2prateek.dart:dart-processor:','com.f2prateek.dart:dart-processor:${comF2prateekDart_dartProcessor_Version}'),
	('com.f2prateek.dart:henson-processor:COMMENT','    //Dart and Hendson'),
	('com.f2prateek.dart:henson-processor:','com.f2prateek.dart:henson-processor:${comF2prateekDart_hensonProcessor_Version}'),
	('com.batch.android:batch-sdk:COMMENT','    //Dart and Hendson'),
	('com.batch.android:batch-sdk:','com.batch.android:batch-sdk:${comBatchAndroid_batchSdk_Version}'),
	('com.facebook.stetho:stetho:COMMENT','    //Stetho just to check'),
	('com.facebook.stetho:stetho:COMMENT','    //http://facebook.github.io/stetho/'),
	('com.facebook.stetho:stetho:COMMENT','    //https://code.tutsplus.com/tutorials/debugging-android-apps-with-facebooks-stetho--cms-24205'),
	('com.facebook.stetho:stetho:','com.facebook.stetho:stetho:${comFacebookStetho_stetho_Version}'),
	('com.facebook.stetho:stetho-okhttp3:COMMENT','    //Stetho just to check'),
	('com.facebook.stetho:stetho-okhttp3:COMMENT','    //http://facebook.github.io/stetho/'),
	('com.facebook.stetho:stetho-okhttp3:COMMENT','    //https://code.tutsplus.com/tutorials/debugging-android-apps-with-facebooks-stetho--cms-24205'),
	('com.facebook.stetho:stetho-okhttp3:','com.facebook.stetho:stetho-okhttp3:${comFacebookStetho_stethoOkhttp3_Version}'),
	('com.squareup.picasso:picasso:COMMENT','    // Picasso (Image downloading and caching)'),
	('com.squareup.picasso:picasso:','com.squareup.picasso:picasso:${comSquareupPicasso_picasso_Version}'),
	('com.github.PhilJay:MPAndroidChart:COMMENT','    //MPAndroidChart'),
	('com.github.PhilJay:MPAndroidChart:','com.github.PhilJay:MPAndroidChart:${comGithubPhilJay_MPAndroidChart_Version}'),
	('over:over:over:choupy','job:is:done')
]
def testDependenciesHashMap(): 
    for aPair in dependencies_hash:
        print(aPair[0]+"=>"+aPair[1])
 
#testDependenciesHashMap()    